<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.business.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.business.domain.User">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="product_id" property="productId" jdbcType="INTEGER"/>
        <!--对一关联关系设置-->
        <association property="product" javaType="com.business.domain.Product">
            <id column="pid" property="pid" jdbcType="INTEGER"/>
            <result column="brand" property="brand" jdbcType="VARCHAR"/>
            <result column="price" property="price" jdbcType="VARCHAR"/>
        </association>
    </resultMap>
        <!--对多关联关系设置-->
    <resultMap id="UserBooksMap" type="com.business.domain.User"  extends="BaseResultMap">
        <collection property="books" ofType="com.business.domain.Book">
            <id column="bid" property="bid"/>
            <result property="bookname" column="bookname"/>
            <result property="bookauthor" column="bookauthor"/>
        </collection>
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        id, username, password, product_id
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        SELECT
        *
        FROM user
        WHERE id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        DELETE FROM user
        WHERE id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.business.domain.User">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        INSERT INTO user (id, username, password,
        product_id)
        VALUES (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
        #{productId,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.business.domain.User">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="productId != null">
                product_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="productId != null">
                #{productId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.business.domain.User">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="productId != null">
                product_id = #{productId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.business.domain.User">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        UPDATE user
        SET username = #{username,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        product_id = #{productId,jdbcType=INTEGER}
        WHERE id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectAll" resultMap="BaseResultMap">
        SELECT *
        FROM user;
    </select>
    <select id="selectUserProduct" parameterType="integer" resultMap="BaseResultMap">
        SELECT *
        FROM user
            LEFT JOIN product ON id = pid
        WHERE id =#{id};
    </select>
    <select id="selectUserAllInfo" parameterType="map" resultMap="UserBooksMap">
        SELECT * FROM
        ( select*from user LEFT JOIN product ON user.id=product.pid) us
        LEFT JOIN book ON us.id = book.userId
        <where>
            <if test="id!=null">
                AND us.id=#{id}
            </if>
            <if test="username!=null">
                and us.username=#{username}
            </if>
        </where>
    </select>
    <select id="selectUserAllInfoById" parameterType="integer" resultMap="UserBooksMap">
        SELECT * FROM
            ( select*from user LEFT JOIN product ON user.id=product.pid) us
            LEFT JOIN book ON us.id = book.userId
        WHERE us.id=#{id}
    </select>
</mapper>


        <!-- /*SELECT us.product_id FROM
         ( select*from user LEFT JOIN product ON user.id=product.pid) us
         LEFT JOIN book ON us.id=book.user_id
         WHERE us.username=#{username};*/-->